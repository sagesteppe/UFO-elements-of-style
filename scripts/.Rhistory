select(NLCS_NAME, NLCS_TYPE)
View(nm_and_nca)
View(nm_and_nca)
nm_and_nca <- st_intersection(unc_bbox, nm_and_nca) %>%
filter(NLCS_NAME != 'Canyons of the Ancients National Monument') %>%
select(NLCS_NAME, NLCS_TYPE) %>%
rename(geometry = x)
View(nm_and_nca)
nm_and_nca <- st_intersection(unc_bbox, nm_and_nca) %>%
filter(NLCS_NAME != 'Canyons of the Ancients National Monument') %>%
select(NLCS_NAME, NLCS_TYPE) %>%
rename(geometry = x) %>%
st_set_geometry('geometry')
ggplot() +
geom_sf(data = nm_and_nca)
View(nm_and_nca)
nm_and_nca <- st_intersection(unc_bbox, nm_and_nca) %>%
filter(NLCS_NAME != 'Canyons of the Ancients National Monument') #%>%
View(nm_and_nca)
nm_and_nca <- st_read(
file.path(p2carto, vector_data[grep('*NCA*', vector_data)]), quiet = T)
nm_and_nca <- st_intersection(unc_bbox, nm_and_nca) %>%
filter(NLCS_NAME != 'Canyons of the Ancients National Monument') #%>%
View(grouse)
grouse <- st_read(
file.path(p2carto, vector_data[grep('*Grouse*', vector_data)]), quiet = T)
grouse <- st_intersection(unc_bbox, grouse) %>%
filter(OBJECTID:Status202)%>%
rename(geometry = x) %>%
st_set_geometry('geometry')
grouse <- st_intersection(unc_bbox, grouse) %>%
filter(OBJECTID:Status_202)%>%
rename(geometry = x) %>%
st_set_geometry('geometry')
grouse <- st_intersection(unc_bbox, grouse) %>%
select(OBJECTID:Status_202)%>%
rename(geometry = x) %>%
st_set_geometry('geometry')
ggplot() +
geom_sf(data = grouse)
View(administrative_boundaries)
administrative_boundaries <- st_intersection(unc_bbox, administrative_boundaries)
View(administrative_boundaries)
administrative_boundaries <- st_intersection(unc_bbox, administrative_boundaries) %>%
select(FIELD_OFFICE = ADMU_NAME, DISTRICT_OFFICE = PARENT_NAME)
administrative_boundaries <- st_intersection(unc_bbox, administrative_boundaries) %>%
select(FIELD_OFFICE = ADMU_NAME, DISTRICT_OFFICE = PARENT_NAM)
View(administrative_boundaries)
acec <- st_intersection(unc_bbox, acec)
View(acec)
acec <- st_intersection(unc_bbox, acec) %>%
select(ACEC_NAME, LUP_NAME, ACEC_ID)
acec <- st_intersection(unc_bbox, acec) %>%
select(ACEC_NAME, LUP_NAME, ACEC_ID) %>%
rename(geometry = x) %>%
st_set_geometry('geometry')
ggplot() +
geom_sf(data = acec)
padus <-
st_intersection(st_transform(unc_bbox, st_crs(padus)), padus) %>%
st_transform(26913)
View(padus)
padus <-
st_intersection(st_transform(unc_bbox, st_crs(padus)), padus) %>%
st_transform(26913) %>%
select(Own_Type, Own_Name, d_Own_Name, Loc_Own, Des_Tp, d_Des_Tp)
View(padus)
gtlf_roads <- st_intersection(unc_bbox, gtlf_roads)
View(gtlf_roads)
head(gtlf_roads)
gtlf_roads <- st_intersection(unc_bbox, gtlf_roads) %>%
select(PLAN_ALLOW, OHV_ROUTE_, OHV_DSGNTN, ROUTE_PRMR, PLAN_ROUTE, PLAN_ASSET, PLAN_SEASON, PLAN_OHV_R, PLAN_PRMRY, OBSRVE_MOD, OBSRVE_ROU, OBSRVE_SRF, ROUTE_PLAN, GTLF_OWN, NEPA_DOC_N)
gtlf_roads <- st_intersection(unc_bbox, gtlf_roads) %>%
select(PLAN_ALLOW, OHV_ROUTE_, OHV_DSGNTN, ROUTE_PRMR, PLAN_ROUTE, PLAN_ASSET, PLAN_SEASO, PLAN_OHV_R, PLAN_PRMRY, OBSRVE_MOD, OBSRVE_ROU, OBSRVE_SRF, ROUTE_PLAN, GTLF_OWN, NEPA_DOC_N)
View(gtlf_roads)
ggplot() +
geom_sf(data = gtlf_roads)
ggplot() +
geom_sf(data = gtlf_roads)
View(administrative_boundaries)
administrative_boundaries <- st_intersection(unc_bbox, administrative_boundaries) %>%
select(FIELD_OFFICE = ADMU_NAME, DISTRICT_OFFICE = PARENT_NAM) %>%
mutate(FIELD_OFFICE = str_remove(.x, ' FIELD OFFICE'),
DISTRICT_OFFICE = str_remove(.x, ' DISTRICT OFFICE')) %>%
rename(geometry = x) %>%
st_set_geometry('geometry')
administrative_boundaries <- st_read(
file.path(p2carto, vector_data[grep('*admu*', vector_data)]), quiet = T)
administrative_boundaries <- st_intersection(unc_bbox, administrative_boundaries) %>%
select(FIELD_OFFICE = ADMU_NAME, DISTRICT_OFFICE = PARENT_NAM) %>%
mutate(FIELD_OFFICE = str_remove(.x, ' FIELD OFFICE'),
DISTRICT_OFFICE = str_remove(.x, ' DISTRICT OFFICE')) %>%
rename(geometry = x) %>%
st_set_geometry('geometry')
administrative_boundaries <- st_intersection(unc_bbox, administrative_boundaries) %>%
select(FIELD_OFFICE = ADMU_NAME, DISTRICT_OFFICE = PARENT_NAM) %>%
mutate(FIELD_OFFICE = str_remove(., ' FIELD OFFICE'),
DISTRICT_OFFICE = str_remove(., ' DISTRICT OFFICE')) %>%
rename(geometry = x) %>%
st_set_geometry('geometry')
administrative_boundaries <- st_intersection(unc_bbox, administrative_boundaries) %>%
select(FIELD_OFFICE = ADMU_NAME, DISTRICT_OFFICE = PARENT_NAM) %>%
mutate(FIELD_OFFICE = str_remove(FIELD_OFFICE, ' FIELD OFFICE'),
DISTRICT_OFFICE = str_remove(DISTRICT_OFFICE, ' DISTRICT OFFICE')) %>%
rename(geometry = x) %>%
st_set_geometry('geometry')
View(administrative_boundaries)
UFO_ADMU <- filter(administrative_boundaries, FIELD_OFFICE = 'UNCOMPAHGRE')
UFO_ADMU <- filter(administrative_boundaries, FIELD_OFFICE == 'UNCOMPAHGRE')
View(UFO_ADMU)
gtlf_roads <- st_intersection(UFO_ADMU, gtlf_roads) %>%
select(PLAN_ALLOW, OHV_ROUTE_, OHV_DSGNTN, ROUTE_PRMR, PLAN_ROUTE, PLAN_ASSET, PLAN_SEASO, PLAN_OHV_R, PLAN_PRMRY, OBSRVE_MOD, OBSRVE_ROU, OBSRVE_SRF, ROUTE_PLAN, GTLF_OWN, NEPA_DOC_N)
ggplot() +
geom_sf(data = gtlf_roads)
allotments <-
st_intersection(UFO_ADMU, allotments)
ggplot() +
geom_sf(data = allotments)
View(allotments)
allotments <-
st_intersection(UFO_ADMU, allotments) %>%
select(ALLOT_NAME, ALLOT_NO)
View(allotments)
allotments <-
st_intersection(UFO_ADMU, allotments) %>%
select(ALLOT_NAME, ALLOT_NO)
View(allotments)
rm(p)
View(tabeguache)
View(tabeguache)
tabeguache %>% select(NLCS_NAME)
?st_write
tabeguache %>%
select(NLCS_NAME) %>%
st_write(.,
file.path(p2carto, vector_data[grep('*Tabeguache*', vector_data)]),
append = F)
st_intersection(UFO_ADMU, gtlf_roads) %>%
select(PLAN_ALLOW, OHV_ROUTE_, OHV_DSGNTN, ROUTE_PRMR, PLAN_ROUTE, PLAN_ASSET,
PLAN_SEASO, PLAN_OHV_R, PLAN_PRMRY, OBSRVE_MOD, OBSRVE_ROU, OBSRVE_SRF,
ROUTE_PLAN, GTLF_OWN, NEPA_DOC_N) %>%
rename(geometry = x) %>%
st_set_geometry('geometry') %>%
st_write(.,
file.path(p2carto, vector_data[grep('*GTLF*', vector_data)]),
append = F)
st_intersection(UFO_ADMU, gtlf_roads) %>%
select(PLAN_ALLOW, OHV_ROUTE_, OHV_DSGNTN, ROUTE_PRMR, PLAN_ROUTE, PLAN_ASSET,
PLAN_SEASO, PLAN_OHV_R, PLAN_PRMRY, OBSRVE_MOD, OBSRVE_ROU, OBSRVE_SRF,
ROUTE_PLAN, GTLF_OWN, NEPA_DOC_N) %>%
st_write(.,
file.path(p2carto, vector_data[grep('*GTLF*', vector_data)]),
append = F)
View(grouse)
st_intersection(UFO_ADMU, allotments) %>%
select(ALLOT_NAME, ALLOT_NO) %>%
st_write(.,
file.path(p2carto, vector_data[grep('*Grazing*', vector_data)]),
append = F)
st_intersection(UFO_ADMU, allotments) %>%
select(ALLOT_NAME, ALLOT_NO) %>%
st_write(.,
file.path(p2carto, vector_data[grep('*Grazing*', vector_data)]),
append = F)
View(allotments)
st_intersection(st_transform(unc_bbox, st_crs(padus)), padus) %>%
st_transform(26913) %>%
select(Own_Type, Own_Name, d_Own_Name, Loc_Own, Des_Tp, d_Des_Tp) %>%
rename(geometry = x) %>%
st_set_geometry('geometry') %>%
st_write(.,
file.path(p2carto, vector_data[grep('PAD.*Combined*', vector_data)]),
append = F)
nm_and_nca <- st_intersection(unc_bbox, nm_and_nca) %>%
filter(NLCS_NAME != 'Canyons of the Ancients National Monument') %>%
select(NLCS_NAME, NLCS_TYPE) %>%
rename(geometry = x) %>%
st_set_geometry('geometry') %>%
st_write(.,
file.path(p2carto, vector_data[grep('*NCA*', vector_data)]),
append = F)
st_intersection(unc_bbox, grouse) %>%
select(OBJECTID:Status_202) %>%
rename(geometry = x) %>%
st_set_geometry('geometry') %>%
st_write(.,
file.path(p2carto, vector_data[grep('*Grouse*', vector_data)]),
append = F)
st_intersection(unc_bbox, administrative_boundaries) %>%
select(FIELD_OFFICE = ADMU_NAME, DISTRICT_OFFICE = PARENT_NAM) %>%
mutate(FIELD_OFFICE = str_remove(FIELD_OFFICE, ' FIELD OFFICE'),
DISTRICT_OFFICE = str_remove(DISTRICT_OFFICE, ' DISTRICT OFFICE')) %>%
rename(geometry = x) %>%
st_set_geometry('geometry') %>%
st_write(.,
file.path(p2carto, vector_data[grep('*admu*', vector_data)]),
append = F)
administrative_boundaries <- st_read(
file.path(p2carto, vector_data[grep('*admu*', vector_data)]), quiet = T)
st_intersection(unc_bbox, administrative_boundaries) %>%
select(FIELD_OFFICE = ADMU_NAME, DISTRICT_OFFICE = PARENT_NAM) %>%
mutate(FIELD_OFFICE = str_remove(FIELD_OFFICE, ' FIELD OFFICE'),
DISTRICT_OFFICE = str_remove(DISTRICT_OFFICE, ' DISTRICT OFFICE')) %>%
rename(geometry = x) %>%
st_set_geometry('geometry') %>%
st_write(.,
file.path(p2carto, vector_data[grep('*admu*', vector_data)]),
append = F)
st_intersection(unc_bbox, acec) %>%
select(ACEC_NAME, LUP_NAME, ACEC_ID) %>%
rename(geometry = x) %>%
st_set_geometry('geometry') %>%
st_write(.,
file.path(p2carto, vector_data[grep('*ACEC*', vector_data)]),
append = F)
rm(UFO_ADMU)
rm(unc_bbox)
grouse <- st_read(
file.path(p2carto, vector_data[grep('*Grouse*', vector_data)]), quiet = T)
ggplot() +
geom_sf(data = groues)
ggplot() +
geom_sf(data = grouse)
nm_and_nca <- st_read(
file.path(p2carto, vector_data[grep('*NCA*', vector_data)]), quiet = T)
ggplot() +
geom_sf(data = nm_and_nca)
rm(UFO_ADMU, gtlf_roads)
padus <- st_read(
file.path(p2carto, vector_data[grep('PAD.*Combined*', vector_data)]), quiet = T)
ggplot(padus) +
geom_sf()
st_intersection(UFO_ADMU, allotments) %>%  # PROBLEMS WITH GEOMETRY
select(ALLOT_NAME, ALLOT_NO) %>%
st_write(.,
file.path(p2carto, vector_data[grep('*Grazing*', vector_data)]),
append = F)
# these are clipped to the extent of the field office.
UFO_ADMU <- filter(administrative_boundaries, FIELD_OFFICE == 'UNCOMPAHGRE')
administrative_boundaries <- st_read(
file.path(p2carto, vector_data[grep('*admu*', vector_data)]), quiet = T)
st_intersection(UFO_ADMU, allotments) %>%  # PROBLEMS WITH GEOMETRY
select(ALLOT_NAME, ALLOT_NO) %>%
st_write(.,
file.path(p2carto, vector_data[grep('*Grazing*', vector_data)]),
append = F)
# these are clipped to the extent of the field office.
UFO_ADMU <- filter(administrative_boundaries, FIELD_OFFICE == 'UNCOMPAHGRE')
View(administrative_boundaries)
# these are clipped to the extent of the field office.
UFO_ADMU <- filter(administrative_boundaries, FIELD_O == 'UNCOMPAHGRE')
st_intersection(UFO_ADMU, allotments) %>%  # PROBLEMS WITH GEOMETRY
select(ALLOT_NAME, ALLOT_NO) %>%
st_write(.,
file.path(p2carto, vector_data[grep('*Grazing*', vector_data)]),
append = F)
st_intersection(UFO_ADMU, allotments) %>%  # PROBLEMS WITH GEOMETRY
select(ALLOT_NAME, ALLOT_NO) #%>%
st_intersection(UFO_ADMU, allotments) %>%  # PROBLEMS WITH GEOMETRY
select(ALLOT_NAME, ALLOT_NO) %>%
st_as_sf()
st_intersection(UFO_ADMU, allotments) %>%  # PROBLEMS WITH GEOMETRY
select(ALLOT_NAME, ALLOT_NO) %>%
st_as_sf() %>%
st_write(.,
file.path(p2carto, vector_data[grep('*Grazing*', vector_data)]),
append = F)
?st_extract
st_intersection(UFO_ADMU, allotments) %>%  # PROBLEMS WITH GEOMETRY
select(ALLOT_NAME, ALLOT_NO) %>%
st_as_sf() %>%
st_collection_extract(mydata, "POINT")
st_intersection(UFO_ADMU, allotments) %>%  # PROBLEMS WITH GEOMETRY
select(ALLOT_NAME, ALLOT_NO) %>%
st_as_sf() %>%
st_collection_extract("POINT")
st_intersection(UFO_ADMU, allotments) %>%  # PROBLEMS WITH GEOMETRY
select(ALLOT_NAME, ALLOT_NO) %>%
st_as_sf() %>%
st_collection_extract("POINT") %>%
st_buffer(1)
allotments_pt <- %>%
allotments_pt <- allotments %>%
st_collection_extract("POINT") %>%
st_buffer(1)
allotments_poly <- allotments %>%
st_collection_extract(!"POINT")
?st_collection_extract
View(allotments)
allotments <- st_intersection(UFO_ADMU, allotments) %>%  # PROBLEMS WITH GEOMETRY
select(ALLOT_NAME, ALLOT_NO) %>%
st_as_sf()
allotments_poly <- allotments %>%
st_collection_extract(type = c("POLYGON", 'MULTIPOLYGON', 'GEOMETRYCOLLECTION',
'MULTILINESTRING'))
View(allotments_pt)
allotments <- st_intersection(UFO_ADMU, allotments) %>%  # PROBLEMS WITH GEOMETRY
select(ALLOT_NAME, ALLOT_NO) %>%
st_as_sf() %>%
mutate(tempID = 1:n())
View(allotments)
allotments_pt <- allotments %>%
st_collection_extract("POINT") %>%
st_buffer(1)
allotments_poly <- allotments %>%
filter(tempID != allotments_pt$tempID)
View(allotments_poly)
allotments_poly <- allotments %>%
filter(!tempID  %in% allotments_pt$tempID)
View(allotments_pt)
allotments_pt <- allotments %>%
st_collection_extract("POINT") %>%
st_buffer(1) %>%
group_by(ALLOT_NO) %>%
summarize()
View(allotments_pt)
allotments_pt <- allotments %>%
st_collection_extract("POINT") %>%
st_buffer(1) %>%
group_by(ALLOT_NO) %>%
summarize(geometry = st_union(geometry))
?summarize
allotments_pt <- allotments %>%
st_collection_extract("POINT") %>%
st_buffer(1) %>%
group_by(ALLOT_NO) %>%
mutate(geometry = st_union(geometry))
View(allotments_pt)
allotments_pt <- allotments %>%
st_collection_extract("POINT") %>%
st_buffer(1) %>%
group_by(ALLOT_NO) %>%
mutate(geometry = st_union(geometry)) %>%
distinct()
allotments_poly <- allotments %>%
filter(!tempID  %in% allotments_pt$tempID)
View(allotments_poly)
allotments_poly <- allotments %>%
filter(!tempID  %in% allotments_pt$tempID) %>%
bind_rows(allotments_pt)
allotments <- st_read(
file.path(p2carto, vector_data[grep('*Grazing*', vector_data)]), quiet = T)
# Import template
p2carto <- '/media/sagesteppe/ExternalHD/UFO_cartography'
vector_data <- list.files(p2carto, recursive = T, pattern = 'shp$')
allotments <- st_read(
file.path(p2carto, vector_data[grep('*Grazing*', vector_data)]), quiet = T)
# Import template
p2carto <- '/media/sagesteppe/ExternalHD/UFO_cartography'
vector_data <- list.files(p2carto, recursive = T, pattern = 'shp$')
vector_data
allotments <- st_read(
file.path(p2carto, vector_data[grep('*Grazing*', vector_data)]), quiet = T)
# Import template
p2carto <- '/media/sagesteppe/ExternalHD/UFO_cartography'
vector_data <- list.files(p2carto, recursive = T, pattern = 'shp$')
allotments <- st_read(
file.path(p2carto, vector_data[grep('*Grazing*', vector_data)]), quiet = T)
p2carto <- '/media/sagesteppe/ExternalHD/UFO_cartography'
vector_data <- list.files(p2carto, recursive = T, pattern = 'shp$')
allotments <- st_read(
file.path(p2carto, vector_data[grep('*Grazing*', vector_data)]), quiet = T)
allotments <- st_intersection(UFO_ADMU, allotments) %>%  # PROBLEMS WITH GEOMETRY
select(ALLOT_NAME, ALLOT_NO) %>%
st_as_sf() %>%
mutate(tempID = 1:n())
allotments_pt <- allotments %>%
st_collection_extract("POINT") %>%
st_buffer(1) %>%
group_by(ALLOT_NO) %>%
mutate(geometry = st_union(geometry)) %>%
distinct()
allotments <- allotments %>%
filter(!tempID  %in% allotments_pt$tempID) %>%
bind_rows(allotments_pt) %>%
st_write(.,
file.path(p2carto, vector_data[grep('*Grazing*', vector_data)]),
append = F)
allotments_line <- allotments %>%
st_collection_extract("LINESTRING") %>%
st_buffer(1) %>%
group_by(ALLOT_NO) %>%
mutate(geometry = st_union(geometry)) %>%
distinct()
allotments_line <- allotments %>%
st_collection_extract("LINESTRING") %>%
st_buffer(1) %>%
group_by(ALLOT_NO) %>%
mutate(geometry = st_union(geometry)) %>%
distinct()
ifelse(!dir.exists(file.path(p2d, 'Hillshade')),
dir.create(file.path(p2d, 'Hillshade')), FALSE)
library(terra)
library(sf)
library(tidyverse)
library(ggnewscale)
p <- '/media/sagesteppe/ExternalHD/AIM_Field_rasters'
demp <- file.path(p, 'UFO_dem_10_smooth_UTM.tif')
hillshade_p <- file.path(p, 'UFO_Hillshade.tif')
rm(p)
# topographic map for the UFO
pcarto <- '/media/sagesteppe/ExternalHD/UFO_cartography'
coarseDEM <- rast(file.path(pcarto,
'EarthEnv-DEM90_N35W110/EarthEnv-DEM90_N35W110.bil' ))
template <- rast(demp)
rm(pcarto)
coarseDEM <- aggregate(coarseDEM, 5, method="bilinear")
coarseDEM <- project(coarseDEM, crs(template))
coarseDEM <- crop(coarseDEM, template)
plot(coarseDEM)
slope <- terrain(coarseDEM, "slope", unit="radians")
aspect <- terrain(coarseDEM, "aspect", unit="radians")
hill <- shade(slope, aspect, 30, 315)
plot(hill, col=grey(0:100/100), legend=FALSE, mar=c(2,2,1,4))
plot(coarseDEM, col=rainbow(25, alpha=0.35), add=TRUE)
altitude <- as.data.frame(coarseDEM, xy = T)
hillshade <- as.data.frame(hill, xy = T)
names(altitude) <- c('x','y','elevation')
altitude$cut <- cut(altitude$elevation, breaks = 25)
p2d <- '/media/sagesteppe/ExternalHD/UFO_cartography'
ifelse(!dir.exists(file.path(p2d, 'Hillshade')),
dir.create(file.path(p2d, 'Hillshade')), FALSE)
writeRaster(hill, file.path(p2d, 'Hillshade', 'Hillshade.tif'))
rm(aspect, hill)
streams <- st_read(
file.path(p2carto, vector_data[grep('*NHD*', vector_data)]), quiet = T)
library(sf)
library(tidyverse)
# Import template
p2carto <- '/media/sagesteppe/ExternalHD/UFO_cartography'
vector_data <- list.files(p2carto, recursive = T, pattern = 'shp$')
streams <- st_read(
file.path(p2carto, vector_data[grep('*NHD*', vector_data)]), quiet = T)
vector_data
gdb_data <- list.files(p2carto, recursive = T, pattern = 'gdb$')
gdb_data
streams <- st_read(
file.path(p2carto, gdb_data[grep('*NHD*', gdb_data)]), quiet = T)
st_layers(file.path(p2carto, gdb_data[grep('*NHD*', gdb_data)]), quiet = T)[1])
st_layers(file.path(p2carto, gdb_data[grep('*NHD*', gdb_data)]), quiet = T)[1]
st_layers(file.path(p2carto, gdb_data[grep('*NHD*', gdb_data)])[1])
gdb_data
gdb_data <- list.files(p2carto, recursive = T, pattern = 'gdb$')
gdb_data
gdb_data <- list.files(p2carto, recursive = F, pattern = 'gdb$')
gdb_data
gdb_data <- list.files(p2carto, recursive = T, pattern = 'gdb$')
gdb_data
gdb_data <- gsub('/gdb', "", gdb_data)
gdb_data
gdb_data <- gsub('/gdb', "", list.files(p2carto, recursive = T, pattern = 'gdb$'))
st_layers(file.path(p2carto, gdb_data[grep('*NHD*', gdb_data)])[1])
st_read(file.path(p2carto, gdb_data[grep('*NHD*', gdb_data)])[1], layer = 'NHDPlusFlow')
d <- st_read(file.path(p2carto, gdb_data[grep('*NHD*', gdb_data)])[1], layer = 'NHDPlusFlow')
View(d)
View(d)
st_layers(file.path(p2carto, gdb_data[grep('*NHD*', gdb_data)])[1])
d <- st_read(file.path(p2carto, gdb_data[grep('*NHD*', gdb_data)])[1], layer = 'NHDLine')
plot(d)
plot(d)[1]
plot(d[1])#[1]
plot(d[1], col = 'black')
d <- st_read(file.path(p2carto, gdb_data[grep('*NHD*', gdb_data)])[1], layer = 'NHDFlowline')
plot(d[1], col = 'black')
d <- st_read(file.path(p2carto, gdb_data[grep('*NHD*', gdb_data)])[1], layer = 'NHDFlowline') %>% st_zm()
d <- st_read(file.path(
p2carto, gdb_data[grep('*NHD*', gdb_data)])[1], layer = 'NHDFlowline') %>%
st_zm()
ggplot(d) +
geom_sf()
head(d)
administrative_boundaries <- st_read(
file.path(p2carto, vector_data[grep('*admu*', vector_data)]), quiet = T)
View(administrative_boundaries)
unc_bbox <- administrative_boundaries %>%
filter(FIELD_O == 'UNCOMPAHGRE') %>%
st_buffer(8046) %>%
st_bbox %>%
st_as_sfc() %>%
st_as_sf() %>%
st_set_precision(1)
streams <- st_read(
file.path(p2carto, gdb_data[grep('*NHD*', gdb_data)]), quiet = T)
nhd_l1_1 <-st_transform(unc_bbox, st_crs(nhd_l1)), nhd_l1) %>%
# select(PlotKey, PlotID) %>%
st_transform(st_crs(unc_bbox))
nhd_l1_1 <- st_transform(unc_bbox, st_crs(nhd_l1), nhd_l1) %>%
# select(PlotKey, PlotID) %>%
st_transform(st_crs(unc_bbox))
nhd_l1 <- st_read(file.path(
p2carto, gdb_data[grep('*NHD*', gdb_data)])[1], layer = 'NHDFlowline') %>%
st_zm()
nhd_l1_1 <- st_transform(unc_bbox, st_crs(nhd_l1), nhd_l1) %>%
# select(PlotKey, PlotID) %>%
st_transform(st_crs(unc_bbox))
ggplot(nhd_l1_1) +
geom_sf()
View(nhd_l1_1)
st_crs(unc_bbox)
st_crs(unc_bbox) == st_crs(nhd_l1)
nhd_l1_1 <- st_intersection(st_transform(unc_bbox, st_crs(nhd_l1), nhd_l1),
nhd_l1)
nhd_l1 <- st_read(file.path(
p2carto, gdb_data[grep('*NHD*', gdb_data)])[1], layer = 'NHDFlowline') %>%
st_zm() %>%
st_simplify(preserveTopology = F, dTolerance = 10)
ggplot(nhd_l1_1) +
geom_sf()
ggplot(nhd_l1) +
geom_sf()
ggplot(nhd_l1) +
geom_sf()
